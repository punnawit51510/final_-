#include <LiquidCrystal.h>
#include <IRremote.h>
//lcd
const int rs = 8, en = 9, d4 = 10, d5 = 11, d6 = 12, d7 = 13;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
//ir
int RECV_PIN = 7;
IRrecv irrecv(RECV_PIN);
decode_results results;
int s=1;
int Serect=1;
char Tserect[10];
char i[1];
//Water
char WaterStatusPast[10];
char WaterStatusNow[10];
//time
int Time;
int Sec ;
int Min = 0 ;
int hur = 12 ;
int dy = 19 ;
int mnth = 2 ;
int yer = 2022 ;
//timer
int Tsec = 2;
int Tmin = 0;
int Thur = 12 ;
int Timer;
//other
#define Led 3
#define Piezo 4
#define Motor1 5
#define Motor2 6

void setup() 
{
  pinMode(Piezo, OUTPUT);
  pinMode(Led, OUTPUT);
  pinMode(Motor1, OUTPUT);
  pinMode(Motor2, OUTPUT);
  Serial.begin(9600);
  lcd.begin(16, 2);
  Serial.println("Enabling IRin");
  irrecv.enableIRIn(); 
  Serial.println("Enabled IRin");
}
void loop()
{
  TimeCount();
  Serial.readBytes(WaterStatusNow,7);
 //Serial.println(WaterStatusNow); 
  //รับค่าจากremote
  if (irrecv.decode(&results)) 
  {
    unsigned int value = results.value;
    Serial.println(value);
    lcd.clear();

    switch (value) 
    {
      case 2295://1 
        s=1;
          break;

      case 34935://2
          s=2;
          break;

      case 18615://3
       s=3;
       break;

      case 10455://4
      s=4;
      break;
      
      case 8415://left
      Serial.println(Serect);
      if(Serect==1)
      {
        Serect=3;
      }
      else if(Serect==2)
      {
        Serect=1;
      }
      else if(Serect==3)
      {
        Serect=2;
      }
      break;
      
      case 24735://right
      Serial.println(Serect);
      if(Serect==1)
      {
        Serect=2;
      }
      else if(Serect==2)
      {
        Serect=3;
      }
      else if(Serect==3)
      {
        Serect=1;
      }
      break;
      case 20655://up
       if(Serect==1)
      {
        Tsec=Tsec+1;
        if(Tsec==60){Tsec=0;}
      }
      else if(Serect==2)
      {
        Tmin=Tmin+1;
        if(Tmin==60){Tmin=0;}
      }
      else if(Serect==3)
      {
        Thur=Thur+1;
        if(Thur==24){Thur=0;}
      }
       break;

      case 4335://down
      if(Serect==1)
      {
        Tsec=Tsec-1;
        if(Tsec==-1){Tsec=0;}
      }
      else if(Serect==2)
      {
        Tmin=Tmin-1;
        if(Tmin==-1){Tmin=0;}
      }
      else if(Serect==3)
      {
        Thur=Thur-1;
        if(Thur==-1){Thur=0;}
      }
      break;
    }
    irrecv.resume();
  }
  //
  if(s==1)//นาฬิกา
  {
    lcd.setCursor(6, 0); lcd.print(":");
    lcd.setCursor(9, 0); lcd.print(":");
    Serial.print(Min); Serial.print(":");
    Serial.println(Sec);
    if (hur <= 9) {
      lcd.setCursor(4, 0); lcd.print("0");
      lcd.setCursor(5, 0); lcd.print(hur);
    }
    else if (hur > 9) {
      lcd.setCursor(4, 0); lcd.print(hur);
    }

    if (Min <= 9) {
      lcd.setCursor(7, 0); lcd.print("0");
      lcd.setCursor(8, 0); lcd.print(Min);
    }
    else if (Min > 9) {
      lcd.setCursor(7, 0); lcd.print(Min);
    }


    if (Sec <= 9) {
      lcd.setCursor(10, 0); lcd.print("0");
      lcd.setCursor(11, 0); lcd.print(Sec);
    }
    else if (hur > 9) {
      lcd.setCursor(10, 0); lcd.print(Sec);
    }


    lcd.setCursor(5, 1); lcd.print("/");
    lcd.setCursor(8, 1); lcd.print("/");


    if (dy <= 9) {
      lcd.setCursor(3, 1); lcd.print("0");
      lcd.setCursor(4, 1); lcd.print(dy);
    }
    else if (dy > 9) {
      lcd.setCursor(3, 1); lcd.print(dy);
    }

    if (mnth <= 9) {
      lcd.setCursor(6, 1); lcd.print("0");
      lcd.setCursor(7, 1); lcd.print(mnth);
    }
    else if (mnth > 9) {
      lcd.setCursor(6, 1); lcd.print(mnth);
    }
      lcd.setCursor(9, 1); lcd.print(yer);
    }
  //
  if(s==2)//ตั้งเวลา
  {
    lcd.setCursor(0, 0);
    lcd.print("Mode2:Timer");
    lcd.setCursor(11, 0);
    if(Serect==1)
      {
         lcd.print(":sec ");
      }
      else if(Serect==2)
      {
         lcd.print(":min ");
      }
      else if(Serect==3)
      {
        lcd.print(":hour");
      }    
    lcd.setCursor(6, 1); lcd.print(":");
    lcd.setCursor(9, 1); lcd.print(":");
    
    if (Thur <= 9) {
      lcd.setCursor(4, 1); lcd.print("0");
      lcd.setCursor(5, 1); lcd.print(Thur);
    }
    else if (Thur > 9) {
      lcd.setCursor(4, 1); lcd.print(Thur);
    }

    if (Tmin <= 9) {
      lcd.setCursor(7, 1); lcd.print("0");
      lcd.setCursor(8, 1); lcd.print(Tmin);
    }
    else if (Tmin > 9) {
      lcd.setCursor(7, 1); lcd.print(Tmin);
    }
    if (Tsec <= 9) {
      lcd.setCursor(10, 1); lcd.print("0");
      lcd.setCursor(11, 1); lcd.print(Tsec);
    }
    else if (Thur > 9) {
      lcd.setCursor(10, 1); lcd.print(Tsec);
    }

    
  }
  //
  if(s==3)//เช็คสถานะน้ำในถัง
    {
     if(WaterStatusPast!=WaterStatusNow)
     {
      Serial.println("clear");
      Serial.println(WaterStatusPast);
      Serial.println(WaterStatusNow);
     }
     lcd.setCursor(0, 0);
     lcd.print("Mode3:WaterTank");
     lcd.setCursor(0, 1);
     lcd.print(WaterStatusNow);
    }
  //
  if(s==4)//รดน้ำทันที
  {
    lcd.setCursor(0, 0);
    lcd.print("Mode4:Manual");
    digitalWrite(Led, 1);
    digitalWrite(Piezo,1);
    digitalWrite(Motor1, 1);
    digitalWrite(Motor2, 0);
    delay(1);
  }
    digitalWrite(Motor1, 0);
    digitalWrite(Motor2, 0);
    noTone(Piezo);
    digitalWrite(Led, 0);
  //
  if(Tsec==Sec&&Tmin==Min&&Thur==hur)
  {
	digitalWrite(Led, 1);
    digitalWrite(Piezo,1);
    digitalWrite(Motor1, 1);
    digitalWrite(Motor2, 0);
    delay(1000);
  }
    digitalWrite(Motor1, 0);
    digitalWrite(Motor2, 0);
    noTone(Piezo);
    digitalWrite(Led, 0);
  
}

void TimeCount()//ตัวนับเวลา
{
  Time=millis();
  Sec=Time/1000;
  
  if (Sec == 60) {
    Min = Min + 1;
    Sec = 0 ;
  }
  
  if (Min == 60) {
    hur = hur + 1;
    Min = 0 ;
  }

  if (hur == 24) {
    hur = 0;
    dy = dy + 1;
  }

  if (dy == 31) {
    mnth = mnth + 1;
    dy = 0;
  }

  if (mnth == 13) {
    yer = yer + 1;
    mnth = 0;
  }
}
